/**
 * WXTiles
 * Make and explore beautiful, rapidly-refreshed weather maps with the WXTiles API
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/LegendResources'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./LegendResources'));
  } else {
    // Browser globals (root is window)
    if (!root.WxTiles) {
      root.WxTiles = {};
    }
    root.WxTiles.Style = factory(root.WxTiles.ApiClient, root.WxTiles.LegendResources);
  }
}(this, function(ApiClient, LegendResources) {
  'use strict';




  /**
   * The Style model module.
   * @module model/Style
   * @version 3.0.0
   */

  /**
   * Constructs a new <code>Style</code>.
   * A named style representing one way of rendering a layer as tiles.
   * @alias module:model/Style
   * @class
   * @param id {String} Style ID.
   * @param resources {module:model/LegendResources} 
   */
  var exports = function(id, resources) {
    var _this = this;

    _this['id'] = id;



    _this['resources'] = resources;
  };

  /**
   * Constructs a <code>Style</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Style} obj Optional instance to populate.
   * @return {module:model/Style} The populated <code>Style</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('label')) {
        obj['label'] = ApiClient.convertToType(data['label'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('resources')) {
        obj['resources'] = LegendResources.constructFromObject(data['resources']);
      }
    }
    return obj;
  }

  /**
   * Style ID.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Name of the style that is implemented by the layer.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Text displayed alongside an image legend (often, but not always, a representation of the primary unit).
   * @member {String} label
   */
  exports.prototype['label'] = undefined;
  /**
   * Description of the style (in greater detail than the name).
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {module:model/LegendResources} resources
   */
  exports.prototype['resources'] = undefined;



  return exports;
}));


